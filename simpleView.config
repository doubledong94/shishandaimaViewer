ClassScope SpecificKeys__________________________________________________________________________________________ = "android.view.View";
ClassScope class_view = "android.view.View";
ClassScope class_inflater = "android.view.LayoutInflater";
ClassScope RuntimeClass = { class_inflater };
ClassScope UsedClass = usedBy ( RuntimeClass );
Node SpecificKeys____________________________________________________________________________ = "android.view.View.ALPHA" ("android.view.View");
Node Param_resource_fromInflate = "android.view.LayoutInflater.inflate::int,ViewGroup,boolean:resource" ("android.view.LayoutInflater");
Node Param_context_fromView = "android.view.View.View::Context,AttributeSet,int,int:context" ("android.view.View");
Node Method_View = "android.view.View.View::Context,AttributeSet,int,int:" ("android.view.View");
Node Vars_____________________________________________________________________________________________ = { SpecificKeys____________________________________________________________________________ };
Node var_param_to = { Param_resource_fromInflate };
Node Constrains_______________________________________________________________________________ = { SpecificKeys____________________________________________________________________________ };
Node Used_Method = MethodOf ( UsedClass );
Node Used_Param = ParameterOf ( Used_Method );
Node Used_CalledParam = CalledParamOf ( Used_Param );
Node Runtime_Field = FieldOf ( RuntimeClass );
Seg SEG_UNITS____________________________________________________________________ = Any->Any;
Seg seg_unit_stepIn = CalledParameter->DataStep->Parameter;
Seg seg_unit_stepOut = Return->DataStep->CalledReturn;
Seg seg_unit_stepOver = CalledParameter->CalledMethod->CalledReturn;
Seg seg_unit_refField = Reference->Field;
Seg seg_unit_refMethod = Reference->CalledMethod->CalledReturn;
Seg seg_unit_indexAny = Index->Any;
Seg seg_unit_indexField = Index->Field;
Seg seg_unit_indexParam = Index->Parameter;
Seg seg_unit_indexCReturn = Index->CalledReturn;
Seg SEG_UNITS_COMB________________________________________________________________ = Any->Any;
Seg seg_comb_generalAny = Any?->Parameter?;
Seg seg_comb_stepInAndOut = [seg_unit_stepIn]?->[seg_unit_stepOut]?;
Seg seg_comb_stepInAndOver = [seg_unit_stepIn]?->[seg_unit_stepOver]?;
Seg seg_comb_ref = [seg_unit_refField]?->[seg_unit_refMethod]?;
Seg seg_comb_index = [seg_unit_indexAny]?->[seg_unit_indexField]?->[seg_unit_indexParam]?->[seg_unit_indexCReturn]?;
Seg seg_comb_dataFlow_stepInAndOut = [seg_comb_generalAny]?->[seg_comb_stepInAndOut]?->[seg_comb_ref]?->[seg_comb_index]?;
Seg seg_comb_dataFlow_stepInAndOver = [seg_comb_generalAny]?->[seg_comb_stepInAndOver]?->[seg_comb_ref]?->[seg_comb_index]?;
Seg seg_comb_dataFlow_withinMethod = [seg_comb_generalAny]?->[seg_unit_stepOver]?->[seg_comb_ref]?->[seg_comb_index]?;
Seg SEG_LINE_DOWN_AND_UP______________________________________________________ = Any->Any;
Seg seg_linedown_paramOneStepIn = DataStep->Parameter->[seg_comb_dataFlow_withinMethod]*->Return?->Field?->CalledParameter?;
Seg seg_linedown_paramStepInAndOut = DataStep->Parameter->[seg_comb_dataFlow_stepInAndOver]*->[seg_unit_stepOut];
Seg seg_linedown_CParamToCReturn = CalledMethod->CalledReturn;
Seg seg_linedown_CparamCmethod = Any?->CalledMethod;
Seg seg_linedown_calledKeyToAny = CalledMethod?->CalledReturn?->[seg_comb_dataFlow_withinMethod]*->Field?->Return?;
Seg seg_lineup_CReturnFromCParam = CalledParameter->CalledMethod;
Seg seg_lineup_refedBy = CalledReturn?->Field?->Parameter?->[seg_comb_dataFlow_withinMethod]*->Reference;
Seg seg_lineup_CParamOfCMethod = Field?->Parameter?->[seg_comb_dataFlow_withinMethod]*->CalledParameter;
Seg seg_unit_paramUpWithStepNode = DataStep->Parameter;
Seg seg_lineup_anyFromAny = Field?->[seg_unit_paramUpWithStepNode]?->[seg_comb_dataFlow_withinMethod]*;
Seg SEG_________________________________________________________________________________ = Any->Any;
Line DATA_FLOW_________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line dataFlow_param_withinMethod_toReturn = var_param_to->[seg_comb_dataFlow_withinMethod]*->Return;
Line dataFlow_param_stepInAndOut_toField = var_param_to->[seg_comb_dataFlow_stepInAndOut]*->Field;
Line dataFlow_param_stepInAndOver_toCalledParam = var_param_to->[seg_comb_dataFlow_stepInAndOver]*->CalledParameter->CalledMethod;
Line dataFlow_param_stepInAndOver_toField = var_param_to->[seg_comb_dataFlow_stepInAndOver]*->Runtime_Field;
Line SCOPE_FLOW_____________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line scopeFlow_refField = Runtime_Field->[seg_comb_generalAny]*->Reference->CalledMethod;
Line scopeFlow_refField2 = Runtime_Field->[seg_comb_generalAny]*->Reference;
Line TIMING_FLOW___________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line LOGIC_FLOW_____________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line logice_flow_param_to = var_param_to->[seg_comb_dataFlow_stepInAndOut]*->Condition;
Graph paramToRefedByField = dataFlow_param_stepInAndOver_toCalledParam,scopeFlow_refField<[0,[[0,0],[[0,0],[0,0,0]],[[0,0],[0,0,0]],[[0,0],[0,0],[0,0],[0,0]]],0,1],[0,[0,0],0,1]>;
