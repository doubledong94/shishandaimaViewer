ClassScope SpecificKeys__________________________________________________________________________________________ = "android.view.View";
ClassScope android_content_res_resourceImpl = "android.content.res.ResourcesImpl.ThemeImpl";
ClassScope android_internal_phoneWindow = "com.android.internal.policy.PhoneWindow";
ClassScope android_view_view = "android.view.View";
ClassScope android_view_contextThemeWrapper = "android.view.ContextThemeWrapper";
ClassScope android_view_layoutInflater = "android.view.LayoutInflater";
ClassScope android_app_activity = "android.app.Activity";
ClassScope android_view_window = "android.view.Window";
ClassScope android_content_context = "android.content.Context";
ClassScope android_util_xml = "android.util.Xml";
ClassScope classContextImpl = "android.app.ContextImpl";
ClassScope subClass_______________________________________________________ = { SpecificKeys__________________________________________________________________________________________ };
ClassScope subclass_of_window = subOf ( android_view_window );
ClassScope subclass_of_context = subOf ( android_content_context );
ClassScope RuntimeClass = { android_view_view };
ClassScope UsedClass = usedBy ( RuntimeClass );
Node resource_resId = ["android.content.res.ResourcesImpl.ThemeImpl.mThemeResId" ("android.content.res.ResourcesImpl.ThemeImpl")];
Node themeWrapper_themeResource = ["android.view.ContextThemeWrapper.mThemeResource" ("android.view.ContextThemeWrapper")];
Node phoneWindow_mTheme = ["com.android.internal.policy.PhoneWindow.mTheme" ("com.android.internal.policy.PhoneWindow")];
Node paramFrom2 = ["android.app.ContextImpl.setTheme::int:resId" ("android.app.ContextImpl")];
Node paramFrom = ["android.util.Xml.asAttributeSet::XmlPullParser:parser" ("android.util.Xml")];
Node SpecificKeys____________________________________________________________________________ = "android.view.View.ALPHA" ("android.view.View");
Node Param_resId_fromSetTheme = "android.app.Activity.setTheme::int:resid" ("android.app.Activity");
Node Param_resId_fromPhoneWindow_setTheme = "com.android.internal.policy.PhoneWindow.setTheme::int:resid" ("com.android.internal.policy.PhoneWindow");
Node inflaterFactory = ["android.view.LayoutInflater.mFactory2" ("android.view.LayoutInflater"),"android.view.LayoutInflater.mFactory" ("android.view.LayoutInflater"),"android.view.LayoutInflater.mPrivateFactory" ("android.view.LayoutInflater")];
Node Param_resource_fromInflate = "android.view.LayoutInflater.inflate::int,ViewGroup,boolean:resource" ("android.view.LayoutInflater");
Node Param_context_fromView = "android.view.View.View::Context,AttributeSet,int,int:context" ("android.view.View");
Node Method_View = "android.view.View.View::Context,AttributeSet,int,int:" ("android.view.View");
Node Vars_____________________________________________________________________________________________ = { SpecificKeys____________________________________________________________________________ };
Node var_param_to = { Param_resId_fromSetTheme };
Node var_param_from = { paramFrom };
Node Constrains_______________________________________________________________________________ = { SpecificKeys____________________________________________________________________________ };
Node Used_Method = MethodOf ( UsedClass );
Node Used_Param = ParameterOf ( Used_Method );
Node Runtime_Field = FieldOf ( RuntimeClass );
Seg SEG_UNITS____________________________________________________________________ = Any->Any;
Seg unit_stepIn = CalledParameter->DataStep->Parameter;
Seg unit_stepOut = Return->DataStep->CalledReturn;
Seg unit_stepOver = CalledParameter->CalledMethod->CalledReturn;
Seg unit_overrideIn = CalledParameter->DataOverride->Parameter;
Seg unit_overrideOut = Return->DataOverride->CalledReturn;
Seg unit_refField = Reference->Field;
Seg unit_refMethod = Reference->CalledMethod->CalledReturn;
Seg unit_localRefMethod = Any->Reference->CalledMethod;
Seg unit_indexAny = Index->Any;
Seg unit_indexField = Index->Field;
Seg unit_indexParam = Index->Parameter;
Seg unit_indexCReturn = Index->CalledReturn;
Seg SEG_UNITS_COMB________________________________________________________________ = Any->Any;
Seg comb_generalAny = Any || Parameter;
Seg comb_step = [unit_stepIn] || [unit_stepOut] || [unit_stepOver];
Seg comb_stepInAndOut = [unit_stepIn] || [unit_stepOut];
Seg comb_stepInAndOver = [unit_stepIn] || [unit_stepOver];
Seg comb_ref = [unit_refField] || [unit_refMethod];
Seg comb_index = [unit_indexAny] || [unit_indexField] || [unit_indexParam] || [unit_indexCReturn];
Seg comb_noStep = [comb_generalAny] || [comb_ref] || [comb_index];
Seg comb_noStepover = [comb_generalAny] || [comb_ref] || [comb_index] || [comb_stepInAndOut];
Seg comb_noStepout = [comb_generalAny] || [comb_ref] || [comb_index] || [comb_stepInAndOver];
Seg comb_noStepInNorOut = [comb_generalAny] || [comb_ref] || [comb_index] || [unit_stepOver];
Seg comb_noStepInNorOver = [comb_generalAny] || [comb_ref] || [comb_index] || [unit_stepOut];
Seg comb_overrideIn = [comb_generalAny] || [comb_ref] || [comb_index] || [unit_overrideIn];
Seg comb_overrideOut = [comb_generalAny] || [comb_ref] || [comb_index] || [comb_step] || [unit_overrideOut];
Seg comb_all = [comb_generalAny] || [comb_ref] || [comb_index] || [comb_step];
Seg comb_method_input = Field || CalledReturn || Parameter;
Seg comb_method_output = Field || Return || CalledParameter || Condition || [unit_localRefMethod];
Seg SEG_DATAFLOW_______________________________________________________________ = Any->Any;
Seg dataFlow_stepInAndOutOnce = [unit_stepIn]->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_stepInAndOutTwice = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_stepInAndOutOnce]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_stepInAndOutThreeTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_stepInAndOutTwice]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutFourTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_stepInAndOutThreeTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutFiveTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutFourTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutSixTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutFiveTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutSevenTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutSixTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutEightTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutSevenTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutNineTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutEightTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg dataFlow_setInAndOutTenTimes = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutNineTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg SEG_CONDITION_____________________________________________________________ = Any->Any;
Seg toCondition = [comb_noStep]*->Else?->Condition;
Seg SEG_LINE_DOWN_AND_UP______________________________________________________ = Any->Any;
Seg linedown_paramOneStepIn = DataStep->Parameter->[comb_noStepInNorOut]*->Return?->Field?->CalledParameter?;
Seg linedown_paramStepInAndOut = DataStep->Parameter->[comb_noStepInNorOut]*->[dataFlow_setInAndOutSevenTimes]*->[comb_noStepInNorOut]*->[unit_stepOut];
Seg linedown_CParamToCReturn = CalledMethod->CalledReturn;
Seg linedown_CparamCmethod = Any?->CalledMethod;
Seg linedown_calledKeyToAny = CalledMethod?->CalledReturn?->[comb_noStepInNorOut]*->Field?->Return?;
Seg linedown_overrideParam = DataOverride->Parameter->[comb_overrideIn]*->[comb_method_output];
Seg linedown_overrideReturn = DataOverride->CalledReturn->[comb_overrideOut]*->[comb_method_output];
Seg linedown_any = Any*->[comb_all]*;
Seg lineup_returnStepInAndOut = [unit_stepIn]->[comb_noStepInNorOut]*->[dataFlow_setInAndOutSevenTimes]*->[comb_noStepInNorOut]*->Return->DataStep;
Seg lineup_CReturnFromCParam = CalledParameter->CalledMethod;
Seg lineup_CParamOfCMethod = Field?->Parameter?->[comb_noStepInNorOut]*->CalledParameter;
Seg unit_paramUpWithStepNode = DataStep->Parameter;
Seg lineup_anyFromAny = Field?->[unit_paramUpWithStepNode]?->[comb_noStepInNorOut]*;
Seg lineup_conditionTo = [comb_method_input]*->[toCondition]+;
Seg lineup_refedBy = [comb_method_input]?->[comb_noStep]*->Reference;
Line DATA_FLOW_________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line dataFlow_param_withinMethod_toReturn(P) = P->[comb_noStepInNorOut]*->Return;
Line dataFlow_setpInAndOver(P) = P->[comb_noStepout]*->[comb_method_output];
Line dataFlow_stepOut(P) = P->[comb_noStepInNorOver]*->[comb_method_output];
Line dataFlow_to(P) = P->[comb_all]*->[comb_method_output];
Line dataFlow_fieldFrom = [comb_method_input]->[comb_noStep]*->inflaterFactory;
Line dataFlow_paramFrom = [comb_method_input]->[comb_noStepInNorOut]*->CalledParameter->DataStep->var_param_from;
Line dataFlow_paramFrom2 = [comb_method_input]->[comb_noStep]*->CalledParameter->DataOverride->paramFrom2;
Line dataFlow_param_stepInAndOver_toCalledParam = var_param_to->[comb_noStepout]*->CalledParameter->CalledMethod;
Line SCOPE_FLOW_____________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line scopeFlow_refField = Runtime_Field->[comb_generalAny]*->Reference->CalledMethod;
Line scopeFlow_refField2 = Runtime_Field->[comb_generalAny]*->Reference;
Line TIMING_FLOW___________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line LOGIC_FLOW_____________________________________________________________________________ = SpecificKeys____________________________________________________________________________->Any;
Line logice_flow_param_to = var_param_to->[comb_noStepover]*->Condition;
Graph paramToRefedByField = dataFlow_param_stepInAndOver_toCalledParam,scopeFlow_refField<[0,[[0,0],[[0,0],[0,0,0]],[[0,0],[0,0],[0,0],[0,[0,0],0]],[[0,0],[0,0,0]]],0,1],[0,[0,0],0,1]>;
LineInstance dataFlow_to_themeWrapper_themeResource = dataFlow_to(themeWrapper_themeResource);
LineInstance dataFlow_to_resourceImpl_resId = dataFlow_to(resource_resId);
LineInstance dataFlow_setpInAndOver_resourceImpl_resId = dataFlow_setpInAndOver(resource_resId);
LineInstance dataFlow_setpInAndOver_themeWrapper_themeRes = dataFlow_setpInAndOver(themeWrapper_themeResource);
LineInstance dataFlow_setpInAndOver_phoneWindow_mTheme = dataFlow_setpInAndOver(phoneWindow_mTheme);
LineInstance dataFlow_param_setpInAndOver_resId_fromSetTheme = dataFlow_setpInAndOver(Param_resId_fromSetTheme);
LineInstance dataFlow_inflaterParamResource_withinMethod_toReturn = dataFlow_param_withinMethod_toReturn(Param_resource_fromInflate);
